// Copyright (c) 2019 Alexey Tourbin
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

%{
#include <string.h>
#include "arch.h"
static const struct ent *find(const char *str, size_t len);
%}
%struct-type
%compare-lengths
%define lookup-function-name find
%readonly-tables
%switch=1
struct ent { char name[7]; unsigned char arch; };
%%
"noarch",  Arch_noarch
"src",     Arch_noarch
"i586",    Arch_i686
"i686",    Arch_i686
"x86_64",  Arch_amd64
"aarch64", Arch_arm64
"ppc64le", Arch_ppc64le
%%
#include "rpmarch.h"

int rpmarch(const char *fname, unsigned len)
{
    if (len < sizeof(".src.rpm") - 1)
	return -1;
    const char *dotrpm = fname + len - 4;
    if (memcmp(dotrpm, ".rpm", 4))
	return -1;
    const char *dotarch = memrchr(fname, '.', dotrpm - fname);
    if (!dotarch)
	return -1;
    // %compare-lengths enables memcmp, no need to null-terminate
    const char *arch = dotarch + 1;
    const struct ent *ent = find(arch, dotrpm - arch);
    if (!ent)
	return -1;
    return ent->arch;
}
